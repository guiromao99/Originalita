/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.DaoCliente;
import dao.DaoDuplicata;
import dao.DaoEmpresa;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import javax.swing.text.NumberFormatter;
import org.jrimum.bopepo.BancosSuportados;
import org.jrimum.bopepo.Boleto;
import org.jrimum.bopepo.view.BoletoViewer;
import org.jrimum.domkee.comum.pessoa.endereco.CEP;
import org.jrimum.domkee.comum.pessoa.endereco.Endereco;
import org.jrimum.domkee.comum.pessoa.endereco.UnidadeFederativa;
import org.jrimum.domkee.financeiro.banco.febraban.Agencia;
import org.jrimum.domkee.financeiro.banco.febraban.Carteira;
import org.jrimum.domkee.financeiro.banco.febraban.Cedente;
import org.jrimum.domkee.financeiro.banco.febraban.ContaBancaria;
import org.jrimum.domkee.financeiro.banco.febraban.NumeroDaConta;
import org.jrimum.domkee.financeiro.banco.febraban.Sacado;
import org.jrimum.domkee.financeiro.banco.febraban.TipoDeTitulo;
import org.jrimum.domkee.financeiro.banco.febraban.Titulo;
import org.jrimum.domkee.financeiro.banco.febraban.Titulo.Aceite;

/**
 *
 * @author Henrique
 */
public class frmDuplicatas extends javax.swing.JInternalFrame {

    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Date dataAtual = new Date(System.currentTimeMillis());
    NumberFormatter nfPreco;
    boolean incluir = false, editar = false;
    ArrayList<DaoCliente> listaCli = new ArrayList<DaoCliente>();
    MaskFormatter mfData;
    private int pesquisa = 0;

    /**
     * Creates new form frmDuplicatas1
     */
    public frmDuplicatas() {
        initComponents();
        try {
            DaoCliente cliente = new DaoCliente();
            cliente.setNome_cli("");
            listaCli = new ArrayList<DaoCliente>();
            cmbCliente.removeAllItems();
            listaCli.addAll(cliente.pesquisar(cliente));
            for (DaoCliente daoCli : listaCli) {
                cmbCliente.addItem(daoCli.getNome_cli());
            }
            if (cmbCliente.getItemCount() > 0) {
                cmbCliente.setSelectedIndex(0);
            }

            mfData = new MaskFormatter("##/##/####");
            mfData.setValueContainsLiteralCharacters(true);
            mfData.setPlaceholderCharacter('_');
            mfData.setValueClass(String.class);
            DefaultFormatterFactory ddfData = new DefaultFormatterFactory(mfData);
            txtDataEmissao.setFormatterFactory(ddfData);
            txtDataPgto.setFormatterFactory(ddfData);
            txtDataVcto.setFormatterFactory(ddfData);

            DecimalFormat df = new DecimalFormat("R$ #,###,##0.00;-R$ #,###,##0.00");
            nfPreco = new NumberFormatter(df);
            nfPreco.setValueClass(Double.class);
            DefaultFormatterFactory dffPreco = new DefaultFormatterFactory(nfPreco);
            //txtSaldo.setFormatterFactory(dffPreco);
            //txtValorTitulo.setFormatterFactory(dffPreco);
            //txtValorBaixado.setFormatterFactory(dffPreco);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelBase = new javax.swing.JPanel();
        painelTabela = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDuplicatas = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnVizualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnBaixarDuplicata = new javax.swing.JButton();
        btnGerarBoleto = new javax.swing.JButton();
        cmbPesquisa = new javax.swing.JComboBox();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JToggleButton();
        painelDuplicata = new javax.swing.JPanel();
        btnGravar = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lbl4 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDataEmissao = new javax.swing.JFormattedTextField();
        txtDataVcto = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtValorTitulo = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtValorBaixado = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDataPgto = new javax.swing.JFormattedTextField();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.setPreferredSize(new java.awt.Dimension(77, 23));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        tblDuplicatas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Num Duplciata", "Cod Cli", "Cliente", "Data Emiss√£o", "Data Vcto", "Valor", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDuplicatas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblDuplicatas);

        btnEditar.setText("Editar");
        btnEditar.setPreferredSize(new java.awt.Dimension(77, 23));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnVizualizar.setText("Vizualizar");
        btnVizualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVizualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setPreferredSize(new java.awt.Dimension(77, 23));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnBaixarDuplicata.setText("Baixar Duplicata");
        btnBaixarDuplicata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarDuplicataActionPerformed(evt);
            }
        });

        btnGerarBoleto.setText("Gerar Boleto");
        btnGerarBoleto.setToolTipText("Em breve...");
        btnGerarBoleto.setEnabled(false);
        btnGerarBoleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBoletoActionPerformed(evt);
            }
        });

        cmbPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pesqusiar Por...", "Num Duplicata", "Cliente" }));
        cmbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPesquisaActionPerformed(evt);
            }
        });

        txtPesquisa.setEnabled(false);
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setEnabled(false);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelTabelaLayout = new javax.swing.GroupLayout(painelTabela);
        painelTabela.setLayout(painelTabelaLayout);
        painelTabelaLayout.setHorizontalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnVizualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                        .addComponent(btnGerarBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnBaixarDuplicata, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelTabelaLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar)))
                .addContainerGap())
        );
        painelTabelaLayout.setVerticalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBaixarDuplicata)
                    .addComponent(btnVizualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGerarBoleto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar)
                    .addComponent(cmbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalhes"));

        jLabel1.setText("ID");

        lbl4.setText("N√∫mero");

        jLabel2.setText("Data Emiss√£o");

        jLabel3.setText("Data Vencimento");

        txtDataEmissao.setEditable(false);

        jLabel8.setText("Cliente");

        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl4)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDataEmissao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtDataVcto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(239, 239, 239))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataVcto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pagamento"));

        jLabel4.setText("Valor do T√≠tulo");

        jLabel5.setText("Valor Baixado");

        txtValorBaixado.setEditable(false);

        jLabel6.setText("Saldo");

        txtSaldo.setEditable(false);

        jLabel7.setText("Data de Pagamento");

        txtDataPgto.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtValorTitulo))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtValorBaixado, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7)
                    .addComponent(txtDataPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorBaixado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelDuplicataLayout = new javax.swing.GroupLayout(painelDuplicata);
        painelDuplicata.setLayout(painelDuplicataLayout);
        painelDuplicataLayout.setHorizontalGroup(
            painelDuplicataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDuplicataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDuplicataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDuplicataLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDuplicataLayout.createSequentialGroup()
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelDuplicataLayout.setVerticalGroup(
            painelDuplicataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDuplicataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDuplicataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGravar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDuplicataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(317, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelBaseLayout = new javax.swing.GroupLayout(painelBase);
        painelBase.setLayout(painelBaseLayout);
        painelBaseLayout.setHorizontalGroup(
            painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 581, Short.MAX_VALUE)
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelDuplicata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelBaseLayout.setVerticalGroup(
            painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelDuplicata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vizualizaDados() {
        painelBase.removeAll();
        painelBase.repaint();
        painelBase.revalidate();

        painelBase.add(painelDuplicata);
        painelBase.repaint();
        painelBase.revalidate();
        limpaCampos(painelDuplicata);
    }

    private void inicializaCampos() {
        try {
            DaoDuplicata ddup = new DaoDuplicata();
            int ultimoId = ddup.pegaUltimaID();
            txtId.setText(String.valueOf(ultimoId));
            txtDataEmissao.setText(sdf.format(dataAtual));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregaCamposEditar() {
        try {
            vizualizaDados();
            DaoDuplicata ddup = new DaoDuplicata();

            if (tblDuplicatas.getRowCount() > 0) {

                int poslinha = tblDuplicatas.getSelectedRow();
                ddup.retornaDadosDuplicata((Integer) tblDuplicatas.getValueAt(poslinha, 0));
                if (poslinha >= 0) {
                    txtId.setText(String.valueOf(ddup.getDup_id()));
                    txtNumero.setText(String.valueOf(ddup.getDup_numero()));
                    cmbCliente.setSelectedItem(ddup.getCli_nome());
                    Date dataEmissao = ddup.getDtEmissao();
                    Date dataVcto = ddup.getDtVcto();
                    txtDataEmissao.setText(sdf.format(dataEmissao));
                    txtDataVcto.setText(sdf.format(dataVcto));
                    double valor = ddup.getDup_valor();
                    double saldo = ddup.getDup_saldo();
                    txtValorTitulo.setText(nfPreco.valueToString(valor));
                    txtSaldo.setText(nfPreco.valueToString(saldo));
                    double valorBaixado = valor - saldo;
                    txtValorBaixado.setText(nfPreco.valueToString(valorBaixado));
                    Date dataPgto = ddup.getDtPagamento();
                    txtDataPgto.setText(sdf.format(dataPgto));
                }
            }
            btnGravar.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro de convers√£o:" + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpaCampos(JComponent container) {
        for (Component jcomp : container.getComponents()) {
            if (jcomp instanceof JTextField) {
                ((JTextField) jcomp).setText(null);
            }
        }
    }

    private void limpaTable(JTable tabela) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void atualizaTabela(ArrayList<DaoDuplicata> duplicatas) {
        limpaTable(tblDuplicatas);

        if (duplicatas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "N√£o foram encontrados t√≠tulos"
                    + " no banco de dados.",
                    "Aten√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String linha[] = new String[]{"", "", "", "", "", "", "", ""};
            DefaultTableModel tbl = (DefaultTableModel) tblDuplicatas.getModel();
            try {
                int posicao = -1;
                for (DaoDuplicata duplicata : duplicatas) {
                    posicao++;
                    tbl.addRow(linha);
                    tbl.setValueAt(duplicata.getDup_id(), posicao, 0);
                    tbl.setValueAt(duplicata.getDup_numero(), posicao, 1);
                    tbl.setValueAt(duplicata.getCli_cod(), posicao, 2);
                    tbl.setValueAt(duplicata.getCli_nome(), posicao, 3);
                    tbl.setValueAt(sdf.format(duplicata.getDtEmissao()), posicao, 4);
                    tbl.setValueAt(sdf.format(duplicata.getDtVcto()), posicao, 5);
                    tbl.setValueAt(nfPreco.valueToString(duplicata.getDup_valor()), posicao, 6);
                    tbl.setValueAt(nfPreco.valueToString(duplicata.getDup_saldo()), posicao, 7);
                }
                tblDuplicatas.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value,
                            boolean isSelected, boolean hasFocus, int row, int column) {
                        try {
                            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                            boolean vencido = comparaDataVcto(sdf.parse(table.getValueAt(row, 5).toString()));
                            if (vencido) {
                                setBackground(Color.red);
                                setForeground(Color.WHITE);
                            } else {
                                setBackground(Color.WHITE);
                                setForeground(new Color(51, 51, 51));
                            }
                            if (tblDuplicatas.getValueAt(row, 7).toString().equals("R$ 0,00")) {
                                setBackground(Color.gray);
                                setForeground(Color.WHITE);
                            }

                        } catch (ParseException ex) {
                            JOptionPane.showMessageDialog(null, "Erro" + ex.getMessage(), "Erro:",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                        return this;
                    }

                });

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro:" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean comparaDataVcto(Date dataVcto) {
        boolean vencido;
        if (dataVcto.before(dataAtual)) {
            vencido = true;
        } else {
            vencido = false;
        }
        return vencido;
    }

    private void loopTextFields(JComponent container) {
        for (Component jcomp : container.getComponents()) {
            if (jcomp instanceof JTextField) {
                ((JTextField) jcomp).setEditable(false);
            }
            if (jcomp instanceof JComboBox) {
                ((JComboBox) jcomp).setEditable(false);
            }
            if (jcomp instanceof JFormattedTextField) {
                ((JFormattedTextField) jcomp).setEditable(false);
            }

        }
    }

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        vizualizaDados();
        inicializaCampos();
        incluir = true;
        editar = false;
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            editar = true;
            incluir = false;
            vizualizaDados();
            carregaCamposEditar();
            btnGravar.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVizualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVizualizarActionPerformed
        try {
            vizualizaDados();
            carregaCamposEditar();
            loopTextFields(painelDuplicata);
            btnGravar.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro de convers√£o:" + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVizualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        DaoDuplicata ddup = new DaoDuplicata();
        int poslinha = tblDuplicatas.getSelectedRow();
        if (poslinha > -1) {
            ddup.setDup_id((Integer) tblDuplicatas.getValueAt(poslinha, 0));
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse t√≠tulo?",
                    "Aviso", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    ddup.excluir();
                    JOptionPane.showMessageDialog(null, "Excluido com sucesso!", "Info:",
                            JOptionPane.INFORMATION_MESSAGE);
                    formInternalFrameOpened(null);

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                            JOptionPane.ERROR_MESSAGE);
                } catch (ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                            JOptionPane.ERROR_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {

            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido!", "Info:",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnBaixarDuplicataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarDuplicataActionPerformed
        try {
            if (tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 7).toString().equals("R$ 0,00")) {
                JOptionPane.showMessageDialog(this, "Duplicata ja Baixada!");
            } else {
                DaoDuplicata ddup = new DaoDuplicata();
                ddup.setDup_id((Integer) tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 0));
                StringBuilder sb = new StringBuilder(String.valueOf(tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 1)).replaceAll(",", "."));
                sb.delete(0, 3);
                ddup.setDup_numero(tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 1).toString());
                ddup.setDup_valor((Double) nfPreco.stringToValue(tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 6).toString()));
                frmBaixarDuplicata.showBaixarDup(ddup);
                ArrayList<DaoDuplicata> ListaDuplicata;
                ListaDuplicata = ddup.retornaTodasDuplicatas();
                atualizaTabela(ListaDuplicata);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBaixarDuplicataActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        try {
            DaoDuplicata ddup = new DaoDuplicata();
            ddup.setDup_id(Integer.parseInt(txtId.getText()));
            ddup.setDup_numero(txtNumero.getText());
            ddup.setDtEmissao(dataAtual);
            ddup.setDup_valor(Double.parseDouble(txtValorTitulo.getText()));
            ddup.setDtVcto(sdf.parse(txtDataVcto.getText()));
            ddup.setDtPagamento(new Date());
            ddup.setCli_id(listaCli.get(cmbCliente.getSelectedIndex()).getId_cli());
            ddup.setDup_saldo(Double.parseDouble(txtValorTitulo.getText()));
            ddup.alterar();

            JOptionPane.showMessageDialog(null, "Incluido com sucesso!", "Info:",
                    JOptionPane.INFORMATION_MESSAGE);
            formInternalFrameOpened(null);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            if (incluir) {
                DaoDuplicata ddup = new DaoDuplicata();
                ddup.excluirUltimoId(Integer.parseInt(txtId.getText()));
            }
            painelBase.removeAll();
            painelBase.repaint();
            painelBase.revalidate();

            painelBase.add(painelTabela);
            painelBase.repaint();
            painelBase.revalidate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        painelBase.removeAll();
        painelBase.repaint();
        painelBase.revalidate();

        painelBase.add(painelTabela);
        painelBase.repaint();
        painelBase.revalidate();
        DaoDuplicata d = new DaoDuplicata();
        ArrayList<DaoDuplicata> ListaDuplicata;
        try {
            ListaDuplicata = d.retornaTodasDuplicatas();
            atualizaTabela(ListaDuplicata);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnGerarBoletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBoletoActionPerformed
        geraBoleto();
    }//GEN-LAST:event_btnGerarBoletoActionPerformed

    private void cmbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPesquisaActionPerformed
        switch (cmbPesquisa.getSelectedIndex()) {
            case 1:
                txtPesquisa.setEnabled(true);
                btnPesquisar.setEnabled(true);
                pesquisa = 1;
                break;
            case 2:
                txtPesquisa.setEnabled(true);
                btnPesquisar.setEnabled(true);
                pesquisa = 2;
                break;
            default:
                txtPesquisa.setEnabled(false);
                btnPesquisar.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_cmbPesquisaActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            DaoDuplicata c = new DaoDuplicata();
            ArrayList<DaoDuplicata> ListaDuplicatas = null;
            switch (pesquisa) {
                case 1:
                    c.setDup_numero(txtPesquisa.getText());
                    ListaDuplicatas = c.pesquisarNumDup(c);
                    break;
                case 2:
                    c.setCli_nome(txtPesquisa.getText());
                    ListaDuplicatas = c.pesquisarCli(c);
                    break;
            }
            atualizaTabela(ListaDuplicatas);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnPesquisarActionPerformed(null);
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void geraBoleto() {
        try {
            DaoEmpresa demp = new DaoEmpresa();
            DaoDuplicata ddup = new DaoDuplicata();
            /*
             * INFORMANDO DADOS SOBRE O CEDENTE.
             */
            demp.retornaDadosEmpresa();
            Cedente cedente = new Cedente(demp.getEmp_razao(), demp.getEmp_cnpj());

            /*
             * INFORMANDO DADOS SOBRE O SACADO.
             */
            ddup.retornaDadosClienteGerarBoleto((Integer) tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 0));

            Sacado sacado = new Sacado((String) tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 3), "222.222.222-22");

            // Informando o endere√ßo do sacado.
            Endereco enderecoSac = new Endereco();
            enderecoSac.setUF(UnidadeFederativa.SP);
            enderecoSac.setLocalidade(ddup.getCli_cidade());
            enderecoSac.setCep(new CEP(ddup.getCli_cep()));
            enderecoSac.setBairro(ddup.getCli_bairro());
            enderecoSac.setLogradouro(ddup.getCli_endereco());
            enderecoSac.setNumero(ddup.getCli_numero());
            sacado.addEndereco(enderecoSac);

            /*
             * INFORMANDO DADOS SOBRE O SACADOR AVALISTA.
             */
            /*SacadorAvalista sacadorAvalista = new SacadorAvalista("teste", "00.000.000/0001-91");

             // Informando o endere√ßo do sacador avalista.
             Endereco enderecoSacAval = new Endereco();
             enderecoSacAval.setUF(UnidadeFederativa.DF);
             enderecoSacAval.setLocalidade("Bras√≠lia");
             enderecoSacAval.setCep(new CEP("59000-000"));
             enderecoSacAval.setBairro("Grande Centro");
             enderecoSacAval.setLogradouro("Rua Eternamente Principal");
             enderecoSacAval.setNumero("001");
             sacadorAvalista.addEndereco(enderecoSacAval);
             */
            /*
             * INFORMANDO OS DADOS SOBRE O T√çTULO.
             */
            // Informando dados sobre a conta banc√°ria do t√≠tulo.
            ContaBancaria contaBancaria = new ContaBancaria(BancosSuportados.BANCO_DO_BRASIL.create());
            contaBancaria.setNumeroDaConta(new NumeroDaConta(Integer.parseInt(demp.getEmp_conta()), demp.getEmp_digConta()));
            contaBancaria.setCarteira(new Carteira(30));
            contaBancaria.setAgencia(new Agencia(Integer.parseInt(demp.getEmp_digAgencia()), demp.getEmp_digAgencia()));

            Titulo titulo = new Titulo(contaBancaria, sacado, cedente);
            titulo.setNumeroDoDocumento((String) tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 1));
            titulo.setNossoNumero("99345678912");
            titulo.setDigitoDoNossoNumero("5");
            StringBuilder sb = new StringBuilder(String.valueOf(tblDuplicatas.getValueAt(tblDuplicatas.getSelectedRow(), 5)).replaceAll(",", "."));
            sb.delete(0, 3);
            titulo.setValor(BigDecimal.valueOf(Double.parseDouble(sb.toString())));
            titulo.setDataDoDocumento(new Date());
            titulo.setDataDoVencimento(new Date());
            titulo.setTipoDeDocumento(TipoDeTitulo.DM_DUPLICATA_MERCANTIL);
            titulo.setAceite(Aceite.A);
            titulo.setDesconto(new BigDecimal(0.05));
            titulo.setDeducao(BigDecimal.ZERO);
            titulo.setMora(BigDecimal.valueOf(demp.getEmp_mora()));
            titulo.setAcrecimo(BigDecimal.ZERO);
            titulo.setValorCobrado(BigDecimal.ZERO);

            /*
             * INFORMANDO OS DADOS SOBRE O BOLETO.
             */
            Boleto boleto = new Boleto(titulo);

            boleto.setLocalPagamento("Pag√°vel preferencialmente na Rede X ou em "
                    + "qualquer Banco at√© o Vencimento.");
            boleto.setInstrucao1(demp.getEmp_mensagem());

            /*
             * GERANDO O BOLETO BANC√ÅRIO.
             */
            // Instanciando um objeto "BoletoViewer", classe respons√°vel pela
            // gera√ß√£o do boleto banc√°rio.
            BoletoViewer boletoViewer = new BoletoViewer(boleto);

            // Gerando o arquivo. No caso o arquivo mencionado ser√° salvo na mesma
            // pasta do projeto. Outros exemplos:
            // WINDOWS: boletoViewer.getAsPDF("C:/Temp/MeuBoleto.pdf");
            // LINUX: boletoViewer.getAsPDF("/home/temp/MeuBoleto.pdf");
            File arquivoPdf = boletoViewer.getPdfAsFile("MeuPrimeiroBoleto.pdf");

            // Mostrando o boleto gerado na tela.
            mostreBoletoNaTela(arquivoPdf);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro no Banco de Dados" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro de classe" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro" + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Exibe o arquivo na tela.
     *
     * @param arquivoBoleto
     */
    private static void mostreBoletoNaTela(File arquivoBoleto) {

        java.awt.Desktop desktop = java.awt.Desktop.getDesktop();

        try {
            desktop.open(arquivoBoleto);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaixarDuplicata;
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGerarBoleto;
    private javax.swing.JToggleButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JButton btnVizualizar;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl4;
    private javax.swing.JPanel painelBase;
    private javax.swing.JPanel painelDuplicata;
    private javax.swing.JPanel painelTabela;
    private javax.swing.JTable tblDuplicatas;
    private javax.swing.JFormattedTextField txtDataEmissao;
    private javax.swing.JFormattedTextField txtDataPgto;
    private javax.swing.JFormattedTextField txtDataVcto;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JFormattedTextField txtSaldo;
    private javax.swing.JFormattedTextField txtValorBaixado;
    private javax.swing.JFormattedTextField txtValorTitulo;
    // End of variables declaration//GEN-END:variables
}
